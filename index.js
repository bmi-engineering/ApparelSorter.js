var c=(e,r)=>()=>(r||e((r={exports:{}}).exports,r),r.exports);var E=c((Ve,w)=>{"use strict";var f=Object.defineProperty,re=Object.getOwnPropertyDescriptor,ie=Object.getOwnPropertyNames,ae=Object.prototype.hasOwnProperty,ne=(e,r)=>{for(var i in r)f(e,i,{get:r[i],enumerable:!0})},le=(e,r,i,n)=>{if(r&&typeof r=="object"||typeof r=="function")for(let a of ie(r))!ae.call(e,a)&&a!==i&&f(e,a,{get:()=>r[a],enumerable:!(n=re(r,a))||n.enumerable});return e},oe=e=>le(f({},"__esModule",{value:!0}),e),D={};ne(D,{defaultOptions:()=>I,numericQuantity:()=>te,numericRegex:()=>v,numericRegexWithTrailingInvalid:()=>O,parseRomanNumerals:()=>T,romanNumeralRegex:()=>F,romanNumeralUnicodeRegex:()=>A,romanNumeralUnicodeToAsciiMap:()=>M,romanNumeralValues:()=>$,vulgarFractionToAsciiMap:()=>N,vulgarFractionsRegex:()=>b});w.exports=oe(D);var N={"\xBC":"1/4","\xBD":"1/2","\xBE":"3/4","\u2150":"1/7","\u2151":"1/9","\u2152":"1/10","\u2153":"1/3","\u2154":"2/3","\u2155":"1/5","\u2156":"2/5","\u2157":"3/5","\u2158":"4/5","\u2159":"1/6","\u215A":"5/6","\u215B":"1/8","\u215C":"3/8","\u215D":"5/8","\u215E":"7/8","\u215F":"1/"},v=/^(?=-?\s*\.\d|-?\s*\d)(-)?\s*((?:\d(?:[\d,_]*\d)?)*)(([eE][+-]?\d(?:[\d,_]*\d)?)?|\.\d(?:[\d,_]*\d)?([eE][+-]?\d(?:[\d,_]*\d)?)?|(\s+\d(?:[\d,_]*\d)?\s*)?\s*\/\s*\d(?:[\d,_]*\d)?)?$/,O=new RegExp(v.source.replace(/\$$/,"(?:\\s*[^\\.\\d\\/].*)?")),b=new RegExp(`(${Object.keys(N).join("|")})`),$={MMM:3e3,MM:2e3,M:1e3,CM:900,DCCC:800,DCC:700,DC:600,D:500,CD:400,CCC:300,CC:200,C:100,XC:90,LXXX:80,LXX:70,LX:60,L:50,XL:40,XXX:30,XX:20,XII:12,XI:11,X:10,IX:9,VIII:8,VII:7,VI:6,V:5,IV:4,III:3,II:2,I:1},M={"\u2160":"I","\u2161":"II","\u2162":"III","\u2163":"IV","\u2164":"V","\u2165":"VI","\u2166":"VII","\u2167":"VIII","\u2168":"IX","\u2169":"X","\u216A":"XI","\u216B":"XII","\u216C":"L","\u216D":"C","\u216E":"D","\u216F":"M","\u2170":"I","\u2171":"II","\u2172":"III","\u2173":"IV","\u2174":"V","\u2175":"VI","\u2176":"VII","\u2177":"VIII","\u2178":"IX","\u2179":"X","\u217A":"XI","\u217B":"XII","\u217C":"L","\u217D":"C","\u217E":"D","\u217F":"M"},A=new RegExp(`(${Object.keys(M).join("|")})`,"gi"),F=/^(?=[MDCLXVI])(M{0,3})(C[MD]|D?C{0,3})(X[CL]|L?X{0,3})(I[XV]|V?I{0,3})$/i,I={round:3,allowTrailingInvalid:!1,romanNumerals:!1},T=e=>{let r=`${e}`.replace(A,(s,u)=>M[u]).toUpperCase(),i=F.exec(r);if(!i)return NaN;let[,n,a,m,d]=i;return($[n]??0)+($[a]??0)+($[m]??0)+($[d]??0)},Xe=/^\s*\//,te=(e,r=I)=>{if(typeof e=="number"||typeof e=="bigint")return e;let i=NaN,n=`${e}`.replace(b,(X,t)=>` ${N[t]}`).replace("\u2044","/").trim();if(n.length===0)return NaN;let a={...I,...r},m=(a.allowTrailingInvalid?O:v).exec(n);if(!m)return a.romanNumerals?T(n):NaN;let[,d,s,u]=m,g=s.replace(/[,_]/g,""),l=u?.replace(/[,_]/g,"");if(!g&&l&&l.startsWith(".")?i=0:i=parseInt(g),!l)return d?i*-1:i;let o=a.round===!1?NaN:parseFloat(`1e${Math.floor(Math.max(0,a.round))}`);if(l.startsWith(".")||l.startsWith("e")||l.startsWith("E")){let X=parseFloat(`${i}${l}`);i=isNaN(o)?X:Math.round(X*o)/o}else if(Xe.test(l)){let X=parseInt(g),t=parseInt(l.replace("/",""));i=isNaN(o)?X/t:Math.round(X*o/t)/o}else{let X=l.split("/"),[t,z]=X.map(p=>parseInt(p));i+=isNaN(o)?t/z:Math.round(t*o/z)/o}return d?i*-1:i}});var q=c((Se,k)=>{"use strict";var V=Object.defineProperty,xe=Object.getOwnPropertyDescriptor,me=Object.getOwnPropertyNames,de=Object.prototype.hasOwnProperty,ue=(e,r)=>{for(var i in r)V(e,i,{get:r[i],enumerable:!0})},ge=(e,r,i,n)=>{if(r&&typeof r=="object"||typeof r=="function")for(let a of me(r))!de.call(e,a)&&a!==i&&V(e,a,{get:()=>r[a],enumerable:!(n=xe(r,a))||n.enumerable});return e},se=e=>ge(V({},"__esModule",{value:!0}),e),j={};ue(j,{defaultOptions:()=>C,numericQuantity:()=>$e,numericRegex:()=>h,numericRegexWithTrailingInvalid:()=>P,parseRomanNumerals:()=>Q,romanNumeralRegex:()=>U,romanNumeralUnicodeRegex:()=>B,romanNumeralUnicodeToAsciiMap:()=>R,romanNumeralValues:()=>L,vulgarFractionToAsciiMap:()=>S,vulgarFractionsRegex:()=>W});k.exports=se(j);var S={"\xBC":"1/4","\xBD":"1/2","\xBE":"3/4","\u2150":"1/7","\u2151":"1/9","\u2152":"1/10","\u2153":"1/3","\u2154":"2/3","\u2155":"1/5","\u2156":"2/5","\u2157":"3/5","\u2158":"4/5","\u2159":"1/6","\u215A":"5/6","\u215B":"1/8","\u215C":"3/8","\u215D":"5/8","\u215E":"7/8","\u215F":"1/"},h=/^(?=-?\s*\.\d|-?\s*\d)(-)?\s*((?:\d(?:[\d,_]*\d)?)*)(([eE][+-]?\d(?:[\d,_]*\d)?)?|\.\d(?:[\d,_]*\d)?([eE][+-]?\d(?:[\d,_]*\d)?)?|(\s+\d(?:[\d,_]*\d)?\s*)?\s*\/\s*\d(?:[\d,_]*\d)?)?$/,P=new RegExp(h.source.replace(/\$$/,"(?:\\s*[^\\.\\d\\/].*)?")),W=new RegExp(`(${Object.keys(S).join("|")})`),L={MMM:3e3,MM:2e3,M:1e3,CM:900,DCCC:800,DCC:700,DC:600,D:500,CD:400,CCC:300,CC:200,C:100,XC:90,LXXX:80,LXX:70,LX:60,L:50,XL:40,XXX:30,XX:20,XII:12,XI:11,X:10,IX:9,VIII:8,VII:7,VI:6,V:5,IV:4,III:3,II:2,I:1},R={"\u2160":"I","\u2161":"II","\u2162":"III","\u2163":"IV","\u2164":"V","\u2165":"VI","\u2166":"VII","\u2167":"VIII","\u2168":"IX","\u2169":"X","\u216A":"XI","\u216B":"XII","\u216C":"L","\u216D":"C","\u216E":"D","\u216F":"M","\u2170":"I","\u2171":"II","\u2172":"III","\u2173":"IV","\u2174":"V","\u2175":"VI","\u2176":"VII","\u2177":"VIII","\u2178":"IX","\u2179":"X","\u217A":"XI","\u217B":"XII","\u217C":"L","\u217D":"C","\u217E":"D","\u217F":"M"},B=new RegExp(`(${Object.keys(R).join("|")})`,"gi"),U=/^(?=[MDCLXVI])(M{0,3})(C[MD]|D?C{0,3})(X[CL]|L?X{0,3})(I[XV]|V?I{0,3})$/i,C={round:3,allowTrailingInvalid:!1,romanNumerals:!1},Q=e=>{let r=`${e}`.replace(B,(s,u)=>R[u]).toUpperCase(),i=U.exec(r);if(!i)return NaN;let[,n,a,m,d]=i;return(L[n]??0)+(L[a]??0)+(L[m]??0)+(L[d]??0)},ze=/^\s*\//,$e=(e,r=C)=>{if(typeof e=="number"||typeof e=="bigint")return e;let i=NaN,n=`${e}`.replace(W,(X,t)=>` ${S[t]}`).replace("\u2044","/").trim();if(n.length===0)return NaN;let a={...C,...r},m=(a.allowTrailingInvalid?P:h).exec(n);if(!m)return a.romanNumerals?Q(n):NaN;let[,d,s,u]=m,g=s.replace(/[,_]/g,""),l=u?.replace(/[,_]/g,"");if(!g&&l&&l.startsWith(".")?i=0:i=parseInt(g),!l)return d?i*-1:i;let o=a.round===!1?NaN:parseFloat(`1e${Math.floor(Math.max(0,a.round))}`);if(l.startsWith(".")||l.startsWith("e")||l.startsWith("E")){let X=parseFloat(`${i}${l}`);i=isNaN(o)?X:Math.round(X*o)/o}else if(ze.test(l)){let X=parseInt(g),t=parseInt(l.replace("/",""));i=isNaN(o)?X/t:Math.round(X*o/t)/o}else{let X=l.split("/"),[t,z]=X.map(p=>parseInt(p));i+=isNaN(o)?t/z:Math.round(t*o/z)/o}return d?i*-1:i}});var Z=c((he,_)=>{"use strict";process.env.NODE_ENV==="production"?_.exports=E():_.exports=q()});var ee=c(x=>{var Le=Z(),G=e=>Le.numericQuantity(e,{round:8,allowTrailingInvalid:!1}),ce=[{regex:/^osfa.*$/i,normalized:"OSFA"},{regex:/^one .*$/i,normalized:"OSFA"},{regex:/^one$/i,normalized:"OSFA"},{regex:/^3tp/i,normalized:"XXXS"},{regex:/^xxxs/i,normalized:"XXXS"},{regex:/^3xs/i,normalized:"XXXS"},{regex:/^xxs/i,normalized:"XXS"},{regex:/^2xs/i,normalized:"XXS"},{regex:/^2tp/i,normalized:"XXS"},{regex:/^xs .*$/i,normalized:"XS"},{regex:/^x sm.*$/i,normalized:"XS"},{regex:/^extra small.*$/i,normalized:"XS"},{regex:/^xs\/s*$/i,normalized:"XS/S"},{regex:/^xs-s*$/i,normalized:"XS/S"},{regex:/^xs.*$/i,normalized:"XS"},{regex:/^.* xs$/i,normalized:"XS"},{regex:/^xs/i,normalized:"XS"},{regex:/^tp/i,normalized:"XS"},{regex:/^sm.*$/i,normalized:"S"},{regex:/^.* small/i,normalized:"S"},{regex:/^ss/i,normalized:"Short Sleeve"},{regex:/^short sleeve/i,normalized:"Short Sleeve"},{regex:/^ls/i,normalized:"Long Sleeve"},{regex:/^long sleeve/i,normalized:"Long Sleeve"},{regex:/^s$/i,normalized:"S"},{regex:/^small.*$/i,normalized:"S"},{regex:/^s\/.*$/i,normalized:"S"},{regex:/^s \/.*$/i,normalized:"S"},{regex:/^s .*$/i,normalized:"S"},{regex:/^p/i,normalized:"S"},{regex:/^st$/i,normalized:"S"},{regex:/^s.$/i,normalized:"S"},{regex:/^s-m/i,normalized:"S/M"},{regex:/^medium_large/i,normalized:"M/L"},{regex:/^m\/l.*$/i,normalized:"M/L"},{regex:/^m-l.*$/i,normalized:"M/L"},{regex:/^m$/i,normalized:"M"},{regex:/^medium.*$/i,normalized:"M"},{regex:/^.*med.*$/i,normalized:"M"},{regex:/^m .*$/i,normalized:"M"},{regex:/^m[A-Za-z]*/i,normalized:"M"},{regex:/^M\/.*$/i,normalized:"M"},{regex:/^mt$/i,normalized:"M"},{regex:/^m.$/i,normalized:"M"},{regex:/^l\/xl.*$/i,normalized:"L/XL"},{regex:/^l$/i,normalized:"L"},{regex:/^.*lg.*$/i,normalized:"L"},{regex:/^large.*$/i,normalized:"L"},{regex:/^l .*$/i,normalized:"L"},{regex:/^l\/.*$/i,normalized:"L"},{regex:/^g$/i,normalized:"L"},{regex:/^g\/.*$/i,normalized:"L"},{regex:/^lt$/i,normalized:"L"},{regex:/^l.$/i,normalized:"L"},{regex:/^petite l.*$/i,normalized:"Petite L"},{regex:/^xl\/xxl.*$/i,normalized:"XL/2XL"},{regex:/^xl\/2x.*$/i,normalized:"XL/2XL"},{regex:/^xl*$/i,normalized:"XL"},{regex:/^x large.*$/i,normalized:"XL"},{regex:/^extra large.*$/i,normalized:"XL"},{regex:/^.* XL$/i,normalized:"XL"},{regex:/^x-l.*$/i,normalized:"XL"},{regex:/^l[A-Za-z]*$/i,normalized:"XL"},{regex:/^tg.*$/i,normalized:"XL"},{regex:/^1xl*$/i,normalized:"XL"},{regex:/^1xp*$/i,normalized:"XL"},{regex:/^1x.*$/i,normalized:"XL"},{regex:/^.* 1x$/i,normalized:"XL"},{regex:/^xlt$/i,normalized:"XL"},{regex:/^xl.*$/i,normalized:"XL"},{regex:/^1xt$/i,normalized:"XL"},{regex:/^1xlt$/i,normalized:"XL"},{regex:/^2x$/i,normalized:"2XL"},{regex:/^2xp*$/i,normalized:"2XL"},{regex:/^2xl*$/i,normalized:"2XL"},{regex:/^.* 2X$/i,normalized:"2XL"},{regex:/^2tg.*$/i,normalized:"2XL"},{regex:/^ttg.*$/i,normalized:"2XL"},{regex:/^.* 2tg$/i,normalized:"2XL"},{regex:/^.* ttg$/i,normalized:"2XL"},{regex:/^XXL.*$/i,normalized:"2XL"},{regex:/^2xt$/i,normalized:"2XL"},{regex:/^2xlt$/i,normalized:"2XL"},{regex:/^3xp$/i,normalized:"3XL"},{regex:/^3x$/i,normalized:"3XL"},{regex:/^3xl*$/i,normalized:"3XL"},{regex:/^XXXL.*$/i,normalized:"3XL"},{regex:/^3tg.*$/i,normalized:"3XL"},{regex:/^tttg.*$/i,normalized:"3XL"},{regex:/^3xlt$/i,normalized:"3XL"},{regex:/^3xt$/i,normalized:"3XL"},{regex:/^4xp$/i,normalized:"4XL"},{regex:/^4x$/i,normalized:"4XL"},{regex:/^4xl*$/i,normalized:"4XL"},{regex:/^XXXXL.*$/i,normalized:"4XL"},{regex:/^4xlt.*$/i,normalized:"4XL"},{regex:/^4xt.*$/i,normalized:"4XL"},{regex:/^5xp$/i,normalized:"5XL"},{regex:/^5x$/i,normalized:"5XL"},{regex:/^5xl*$/i,normalized:"5XL"},{regex:/^XXXXXL.*$/i,normalized:"5XL"},{regex:/^5xlt.*$/i,normalized:"5XL"},{regex:/^6xp$/i,normalized:"6XL"},{regex:/^6x$/i,normalized:"6XL"},{regex:/^6xl*$/i,normalized:"6XL"},{regex:/^XXXXXXL.*$/i,normalized:"6XL"},{regex:/^6xlt.*$/i,normalized:"6XL"},{regex:/^7x$/i,normalized:"7XL"},{regex:/^7xl*$/i,normalized:"7XL"},{regex:/^XXXXXXXL.*$/i,normalized:"7XL"},{regex:/^7xlt.*$/i,normalized:"7XL"},{regex:/^8x$/i,normalized:"8XL"},{regex:/^8xl*$/i,normalized:"8XL"},{regex:/^XXXXXXXXL.*$/i,normalized:"8XL"},{regex:/^8xlt.*$/i,normalized:"8XL"},{regex:/^9x$/i,normalized:"9XL"},{regex:/^9xl*$/i,normalized:"9XL"},{regex:/^XXXXXXXXXL.*$/i,normalized:"9XL"},{regex:/^9xlt.*$/i,normalized:"9XL"},{regex:/^10x$/i,normalized:"10XL"},{regex:/^10xl*$/i,normalized:"10XL"},{regex:/^10xlt.*$/i,normalized:"10XL"},{regex:/^XXXXXXXXXXL.*$/i,normalized:"10XL"},{regex:/^11x$/i,normalized:"11XL"},{regex:/^11xl*$/i,normalized:"11XL"},{regex:/^XXXXXXXXXXXL.*$/i,normalized:"11XL"},{regex:/^11xlt.*$/i,normalized:"11XL"},{regex:/^12x$/i,normalized:"12XL"},{regex:/^12xl*$/i,normalized:"12XL"},{regex:/^XXXXXXXXXXXXL.*$/i,normalized:"12XL"},{regex:/^12xlt.*$/i,normalized:"12XL"},{regex:/^13x$/i,normalized:"13XL"},{regex:/^13xl*$/i,normalized:"13XL"},{regex:/^XXXXXXXXXXXXXL.*$/i,normalized:"13XL"},{regex:/^13xlt.*$/i,normalized:"13XL"},{regex:/^13x.*$/i,normalized:"13XL"},{regex:/^14x$/i,normalized:"14XL"},{regex:/^14xl*$/i,normalized:"14XL"},{regex:/^XXXXXXXXXXXXXXL.*$/i,normalized:"14XL"},{regex:/^14xlt.*$/i,normalized:"14XL"},{regex:/^15x$/i,normalized:"15XL"},{regex:/^15xl*$/i,normalized:"15XL"},{regex:/^XXXXXXXXXXXXXXXL.*$/i,normalized:"15XL"},{regex:/^15xlt.*$/i,normalized:"15XL"},{regex:/^16x$/i,normalized:"16XL"},{regex:/^16xl*$/i,normalized:"16XL"},{regex:/^XXXXXXXXXXXXXXXXL.*$/i,normalized:"16XL"},{regex:/^16xlt.*$/i,normalized:"16XL"},{regex:/^17x$/i,normalized:"17XL"},{regex:/^17xl*$/i,normalized:"17XL"},{regex:/^XXXXXXXXXXXXXXXXXL.*$/i,normalized:"17XL"},{regex:/^17xlt.*$/i,normalized:"17XL"},{regex:/^18x$/i,normalized:"18XL"},{regex:/^18xl*$/i,normalized:"18XL"},{regex:/^XXXXXXXXXXXXXXXXXXL.*$/i,normalized:"18XL"},{regex:/^18xlt.*$/i,normalized:"18XL"}].map(function({regex:e,normalized:r},i){return{regex:e,normalized:r,index:i}});function y(e,r){return K(patterns=ce,iteration=0,e=e)}function K(e,r,i){return e.length-1>=r?i.search(e[r].regex)>=0?{regex:e[r].regex,index:e[r].index,size:i,normalized:e[r].normalized,sizeVal:H(i,e[r].normalized||i)}:K(e=e,r=r+1,i=i):{regex:"No Match",index:Y(i),size:i,normalized:i,sizeVal:H(i,i)}}var Y=e=>{let r,i=n=>isNaN(n)==!1;try{if(r=G(e),i(r)||(r=[...e.split(" ").filter(a=>new RegExp(/^[a-zA-Z]+$/).test(a)==!1)].reduce((a,m)=>{let d=G(m);return a+d},0),i(r)))return r}catch{return parseInt(e)||0}return parseInt(e.replace(/[^\d.-]/g,""))},pe=(e,r)=>(((e.toLowerCase()||"").includes("short")||(e.toLowerCase()||"").includes("long"))&&(r=(e.toLowerCase()||"").includes("short")?r-.005:r+.005),r||0),J=e=>{let r=Y(e)||0;return r=pe(e,r),r||0};function H(e,r){if(r&&(r.includes("XS")||r.includes("TP"))){let n=J(e)||0;return n?-n:0}else{let n=J(e)||0;return n||0}}function Ie(e,r){return e.index<r.index||e.sizeVal>0&&r.sizeVal>0&&e.sizeVal<r.sizeVal?-1:e.index==r.index||e.sizeVal>0&&r.sizeVal>0&&e.sizeVal==r.sizeVal?0:1}function fe(e,r={}){return r.normalized&&e.normalized||e.size}function Ne(e){return e.index}function ve(e){return e.normalized}x.sortSizes=function(e,r={}){return e?e.map(y).sort(Ie).map(i=>fe(i,r)):[]};x.sizeIndex=function(e){return[e].map(y).map(Ne)[0]||0};x.normalizedSize=function(e){return[e].map(y).map(ve)[0]||e};x.sort=x.sortSizes;x.numberify=x.sizeIndex;x.index=x.sizeIndex;x.normalize=x.normalizedSize});var Me=ee();module.exports=Me;
/*!
Copyright (c) 2015, Grant Copley
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this
  list of conditions and the following disclaimer.

* Redistributions in binary form must reproduce the above copyright notice,
  this list of conditions and the following disclaimer in the documentation
  and/or other materials provided with the distribution.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/
